<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE map-def SYSTEM "../../dtd/mapping_file.dtd">
<map-def name="CRISTAL_SCANSERVER" version="1.0.0">
  <item key="acquisition_sequence">
    <path>/</path>
    <call>CreateVirtualItem</call>
  </item>
  <item key="acquisition_origin">
    <path>/{NXinstrument}</path>
    <call>CreateVirtualItem</call>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="camera">
    <path>/{NXinstrument}/</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="liveTime">
    <path>/{NXinstrument}/{NXdetector}/liveTime*</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="dark">
    <path>/{NXinstrument}/{NXdetector}/intensityBlack</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="distance">
    <path>/{NXinstrument}/{NXdetector}/distance</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="exposureTime">
    <path>/{NXdata}/integration_times</path>
    <!-- integration_times is in seconds, where exposureTime is expected to be in milliseconds -->
    <call param="1000">ApplyCorrectionFactor</call>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="detectorGain">
    <path>/{NXinstrument}/{NXdetector}/Gain</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="shutterCloseDelay">
    <path>/{NXinstrument}/{NXdetector}/ShutterCloseDelay</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="pixelSize">
    <path>/{NXinstrument}/{NXdetector}/pixel_size_x</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="x0">
    <path>/{NXinstrument}/{NXdetector}/dir_beam_x</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="z0">
    <path>/{NXinstrument}/{NXdetector}/dir_beam_z</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="xBin">
    <path>/{NXinstrument}/{NXdetector}/Xbin</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="zBin">
    <path>/{NXinstrument}/{NXdetector}/Ybin</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="sweeps">
    <path>/{NXinstrument}/{NXdetector}/sweeps</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="mi">
    <path>/{NXinstrument}/{NXintensity_monitor}</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="gain">
    <path>/{NXinstrument}/{NXintensity_monitor}/Gain</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="intensity">
    <path>/{NXinstrument}/{NXintensity_monitor}/intensity</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="lambda">
    <path>/{NXinstrument}/{NXmonochromator}/wavelength</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="energy">
    <path>/{NXinstrument}/{NXmonochromator}/energy</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="exitSlits">
    <path>/{NXinstrument}/{NXmonochromator}/exitSlitAperture</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="cpt4counter2">
    <!-- the core will try to open that path, but won't succeed -->
    <path>/{NXdata}/data_*@long_name=*cpt.4/counter2</path>
    <!-- that method will get the previous path from context, will split the attribute section from the 
      path to filter on that attribute name and value -->
    <call>AttributeFilter</call>
    <call>HarvestEquipmentAttributes</call>
    <attribute name="interpretation" value="image" />
  </item>
  <item key="cpt4counter4">
    <!-- the core will try to open that path, but won't succeed -->
    <path>/{NXdata}/data_*@long_name=*cpt.4/counter4</path>
    <!-- that method will get the previous path from context, will split the attribute section from the 
      path to filter on that attribute name and value -->
    <call>AttributeFilter</call>
    <call>HarvestEquipmentAttributes</call>
    <attribute name="interpretation" value="image" />
  </item>
  <item key="xpadroisum">
    <!-- the core will try to open that path, but won't succeed -->
    <path>/{NXdata}/data_*@long_name=*roisum*</path>
    <!-- that method will get the previous path from context, will split the attribute section from the 
      path to filter on that attribute name and value -->
    <call>AttributeFilter</call>
    <call>HarvestEquipmentAttributes</call>
    <attribute name="interpretation" value="image" />
  </item>
  <item key="xpadroi">
    <path>/{NXdata}/data_*@long_name=*/xpadroi/roi</path>
    <call>AttributeFilter</call>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="images">
    <!-- the core will try to open that path, but won't succeed -->
    <path>/{NXdata}/data_*@long_name=*image</path>
    <!-- that method will get the previous path from context, will split the attribute section from the 
      path to filter on that attribute name and value -->
    <call>AttributeFilter</call>
    <call>HarvestEquipmentAttributes</call>
    <attribute name="interpretation" value="image" />
  </item>
  <item key="spectra_scienta">
    <!-- the core will try to open that path, but won't succeed -->
    <path>/{NXdata}/data_*@long_name=*scienta/sumdata</path>
    <!-- that method will get the previous path from context, will split the attribute section from the 
      path to filter on that attribute name and value -->
    <call>AttributeFilter</call>
    <!-- fitting item listed above will be searched for their attribute "acquisition_sequence"... -->
    <call>HarvestEquipmentAttributes</call>
    <attribute name="equipment">
      <path>/{NXinstrument}/Scienta*{NXdetector}</path>
      <call>CreateVirtualItem</call>
      <call>HarvestEquipmentAttributes</call>
    </attribute>
    <attribute name="region">
      <path>/{NXinstrument}/Scienta*{NXdetector}</path>
      <call>CreateVirtualItem</call>
      <call>HarvestEquipmentAttributes</call>
    </attribute>
    <attribute name="interpretation" value="spectrum" />
  </item>
  <item key="spectra_xia">
    <path>/{NXdata}/data_*@long_name=*/channel*</path>
    <call>AttributeFilter</call>
    <call>HarvestEquipmentAttributes</call>
    <attribute name="equipment">
      <path>/{NXinstrument}/Xia*{NXdetector}</path>
      <call>CreateVirtualItem</call>
      <call>HarvestEquipmentAttributes</call>
    </attribute>
    <attribute name="interpretation" value="spectrum" />
  </item>
  <item key="scalars">
    <path>/{NXdata}/data_*@long_name=*/eventsinrun*</path>
    <call>AttributeFilter</call>
    <call>HarvestEquipmentAttributes</call>
    <attribute name="equipment">
      <path>/{NXinstrument}/Xia*{NXdetector}</path>
      <call>CreateVirtualItem</call>
      <call>HarvestEquipmentAttributes</call>
    </attribute>
  </item>
  <item key="encoderDelta">
    <!-- the core will try to open that path, but won't succeed -->
    <path>/{NXdata}/actuator_*@long_name=*/position</path>
    <!-- that method will get the previous path from context, will split the attribute section from the 
      path to filter on that attribute name and value -->
    <call>AttributeFilter</call>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="beamEnergy">
    <path>/{NXdata}/actuator_*@long_name=*/energy*</path>
    <call>AttributeFilter</call>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="x_position">
    <path>/{NXdata}/actuator_1_1</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="y_position">
    <path>/{NXdata}/trajectory_2_1</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="namedData">
    <path>/{NXdata}/data*</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="motor_name">
    <path>/{NXinstrument}/{NXpositioner}</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="motor_position">
    <path>/{NXinstrument}/{NXpositioner}/raw_value</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="comments">
    <path>/comment_conditions/data</path>
    <call>HarvestEquipmentAttributes</call>
  </item>
  <item key="start_time">
    <path>/start_time</path>
  </item>
  <item key="end_time">
    <path>/end_time</path>
  </item>
  <item key="time">
    <path>/duration</path>
  </item>
</map-def>
